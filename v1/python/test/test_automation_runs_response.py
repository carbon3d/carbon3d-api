# coding: utf-8

"""
    Carbon DLS API

    Welcome to the Carbon DLS API docs!  You can find all relevant documentation here: https://github.com/carbon3d/carbon3d-api   # noqa: E501

    The version of the OpenAPI document: 0.4.4
    Contact: api-list@carbon3d.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import carbon3d
from carbon3d.models.automation_runs_response import AutomationRunsResponse  # noqa: E501
from carbon3d.rest import ApiException

class TestAutomationRunsResponse(unittest.TestCase):
    """AutomationRunsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AutomationRunsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = carbon3d.models.automation_runs_response.AutomationRunsResponse()  # noqa: E501
        if include_optional :
            return AutomationRunsResponse(
                limit = 56, 
                next_cursor = 'dXNlcjpXMDdRQ1JQQTQ=', 
                total_count = 56, 
                automation_runs = [
                    carbon3d.models.automation_run.AutomationRun(
                        uuid = '0', 
                        customer_id = '0', 
                        created_at = '0', 
                        updated_at = '0', 
                        part_uuids = [
                            '0'
                            ], 
                        part_order_uuid = '0', 
                        model_uuids = [
                            '0'
                            ], 
                        model_sop_uuid = '0', 
                        part_sop_uuid = '0', 
                        build_sop_uuid = '0', 
                        printer_queue_sop_uuid = '0', 
                        status = 'submitted', 
                        steps = [
                            carbon3d.models.automation_run_steps.AutomationRun_steps(
                                name = '0', 
                                started_at = '0', 
                                ended_at = '0', 
                                status = 'pending', 
                                outputs = {
                                    'key' : '0'
                                    }, )
                            ], )
                    ]
            )
        else :
            return AutomationRunsResponse(
                automation_runs = [
                    carbon3d.models.automation_run.AutomationRun(
                        uuid = '0', 
                        customer_id = '0', 
                        created_at = '0', 
                        updated_at = '0', 
                        part_uuids = [
                            '0'
                            ], 
                        part_order_uuid = '0', 
                        model_uuids = [
                            '0'
                            ], 
                        model_sop_uuid = '0', 
                        part_sop_uuid = '0', 
                        build_sop_uuid = '0', 
                        printer_queue_sop_uuid = '0', 
                        status = 'submitted', 
                        steps = [
                            carbon3d.models.automation_run_steps.AutomationRun_steps(
                                name = '0', 
                                started_at = '0', 
                                ended_at = '0', 
                                status = 'pending', 
                                outputs = {
                                    'key' : '0'
                                    }, )
                            ], )
                    ],
        )

    def testAutomationRunsResponse(self):
        """Test AutomationRunsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
