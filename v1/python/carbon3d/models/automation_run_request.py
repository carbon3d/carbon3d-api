# coding: utf-8

"""
    Carbon DLS API

    Welcome to the Carbon DLS API docs!  You can find all relevant documentation here: https://github.com/carbon3d/carbon3d-api   # noqa: E501

    The version of the OpenAPI document: 0.4.4
    Contact: api-list@carbon3d.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from carbon3d.configuration import Configuration


class AutomationRunRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'model_uuids': 'list[str]',
        'model_sop_uuid': 'str',
        'part_sop_uuid': 'str',
        'build_sop_uuid': 'str',
        'printer_queue_sop_uuid': 'str'
    }

    attribute_map = {
        'model_uuids': 'model_uuids',
        'model_sop_uuid': 'model_sop_uuid',
        'part_sop_uuid': 'part_sop_uuid',
        'build_sop_uuid': 'build_sop_uuid',
        'printer_queue_sop_uuid': 'printer_queue_sop_uuid'
    }

    def __init__(self, model_uuids=None, model_sop_uuid=None, part_sop_uuid=None, build_sop_uuid=None, printer_queue_sop_uuid=None, local_vars_configuration=None):  # noqa: E501
        """AutomationRunRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._model_uuids = None
        self._model_sop_uuid = None
        self._part_sop_uuid = None
        self._build_sop_uuid = None
        self._printer_queue_sop_uuid = None
        self.discriminator = None

        self.model_uuids = model_uuids
        if model_sop_uuid is not None:
            self.model_sop_uuid = model_sop_uuid
        if part_sop_uuid is not None:
            self.part_sop_uuid = part_sop_uuid
        if build_sop_uuid is not None:
            self.build_sop_uuid = build_sop_uuid
        if printer_queue_sop_uuid is not None:
            self.printer_queue_sop_uuid = printer_queue_sop_uuid

    @property
    def model_uuids(self):
        """Gets the model_uuids of this AutomationRunRequest.  # noqa: E501

        uuids for model(s) to be submitted for automation  # noqa: E501

        :return: The model_uuids of this AutomationRunRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._model_uuids

    @model_uuids.setter
    def model_uuids(self, model_uuids):
        """Sets the model_uuids of this AutomationRunRequest.

        uuids for model(s) to be submitted for automation  # noqa: E501

        :param model_uuids: The model_uuids of this AutomationRunRequest.  # noqa: E501
        :type: list[str]
        """
        if self.local_vars_configuration.client_side_validation and model_uuids is None:  # noqa: E501
            raise ValueError("Invalid value for `model_uuids`, must not be `None`")  # noqa: E501

        self._model_uuids = model_uuids

    @property
    def model_sop_uuid(self):
        """Gets the model_sop_uuid of this AutomationRunRequest.  # noqa: E501

        uuid for a model_sop to be applied to the submitted model  # noqa: E501

        :return: The model_sop_uuid of this AutomationRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._model_sop_uuid

    @model_sop_uuid.setter
    def model_sop_uuid(self, model_sop_uuid):
        """Sets the model_sop_uuid of this AutomationRunRequest.

        uuid for a model_sop to be applied to the submitted model  # noqa: E501

        :param model_sop_uuid: The model_sop_uuid of this AutomationRunRequest.  # noqa: E501
        :type: str
        """

        self._model_sop_uuid = model_sop_uuid

    @property
    def part_sop_uuid(self):
        """Gets the part_sop_uuid of this AutomationRunRequest.  # noqa: E501

        uuid for a part_sop to be applied to the submitted model  # noqa: E501

        :return: The part_sop_uuid of this AutomationRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._part_sop_uuid

    @part_sop_uuid.setter
    def part_sop_uuid(self, part_sop_uuid):
        """Sets the part_sop_uuid of this AutomationRunRequest.

        uuid for a part_sop to be applied to the submitted model  # noqa: E501

        :param part_sop_uuid: The part_sop_uuid of this AutomationRunRequest.  # noqa: E501
        :type: str
        """

        self._part_sop_uuid = part_sop_uuid

    @property
    def build_sop_uuid(self):
        """Gets the build_sop_uuid of this AutomationRunRequest.  # noqa: E501

        uuid for a build_sop to be applied to the submitted model  # noqa: E501

        :return: The build_sop_uuid of this AutomationRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._build_sop_uuid

    @build_sop_uuid.setter
    def build_sop_uuid(self, build_sop_uuid):
        """Sets the build_sop_uuid of this AutomationRunRequest.

        uuid for a build_sop to be applied to the submitted model  # noqa: E501

        :param build_sop_uuid: The build_sop_uuid of this AutomationRunRequest.  # noqa: E501
        :type: str
        """

        self._build_sop_uuid = build_sop_uuid

    @property
    def printer_queue_sop_uuid(self):
        """Gets the printer_queue_sop_uuid of this AutomationRunRequest.  # noqa: E501

        uuid for a printer_queue_sop to be applied to the submitted model  # noqa: E501

        :return: The printer_queue_sop_uuid of this AutomationRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._printer_queue_sop_uuid

    @printer_queue_sop_uuid.setter
    def printer_queue_sop_uuid(self, printer_queue_sop_uuid):
        """Sets the printer_queue_sop_uuid of this AutomationRunRequest.

        uuid for a printer_queue_sop to be applied to the submitted model  # noqa: E501

        :param printer_queue_sop_uuid: The printer_queue_sop_uuid of this AutomationRunRequest.  # noqa: E501
        :type: str
        """

        self._printer_queue_sop_uuid = printer_queue_sop_uuid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AutomationRunRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AutomationRunRequest):
            return True

        return self.to_dict() != other.to_dict()
